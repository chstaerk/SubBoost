library(SubBoost)
library("devtools")
install_github("chstaerk/SubBoost")
detach(package:SubBoost)
library("devtools")
install_github("chstaerk/SubBoost")
library("SubBoost")
library("TH.data")
# input data format:
# list with design matrix in data$x and response vector in data$y
data <- list()
data$x <- as.matrix(bodyfat[,-2])
data$y <- as.vector(bodyfat$DEXfat)
install.packages("TH.data")
library("TH.data")
# input data format:
# list with design matrix in data$x and response vector in data$y
data <- list()
data$x <- as.matrix(bodyfat[,-2])
data$y <- as.vector(bodyfat$DEXfat)
# constant (gamma) in EBIC
const <- 0 # classical BIC
# learning rate
tau <- 0.01
# (maximum) number of iterations
Iter <- 1000
# SubBoost (only applicable for low-dimensional settings, e.g. p<=20)
outputSub <- SubBoost(data = data, Iter = Iter, const = const, tau = tau)
outputSub$selected # selected variables by SubBoost
outputSub$coef # estimated coefficient vector by SubBoost
?regsubsets
leaps::regsubsets
library(SubBoost)
leaps::regsubsets
regsubsets
build()
install()
detach(package:SubBoost)
library(SubBoost)
regsubsets
